name: hongsamIDE API CICD ECR

on:
  push:
    branches: [ "develop" ]
    # paths:
    #   - 'api/**'

env:
  AWS_REGION: ap-northeast-2      
  ECR_REPOSITORY: back-api

jobs:
  build-deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        token: ${{ secrets.SUBMODULE_KEY }}
        submodules: recursive
        
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Grant execute permission for gradlew
      run: chmod +x ./api/gradlew
      
    - name: Build with Gradle
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      with:
        build-root-directory: api
        arguments: build
    
    # - name: Upload build artifact
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: hongsamIDE-back-api
    #     path: api/build/libs/api-0.0.1-SNAPSHOT.jar
        
  # deploy:
  #   name: Deploy
  #   needs: build
  #   runs-on: ubuntu-latest
  #   environment: production

  #   steps:
  #   - name: Download build artifact
  #     uses: actions/download-artifact@v2
  #     with:
  #       name: hongsamIDE-back-api
  #       path: api/build/libs/
        
  #   - name: Configure AWS credentials
  #     uses: aws-actions/configure-aws-credentials@v1
  #     with:
  #       aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}         
  #       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #       aws-region: ${{ env.AWS_REGION }}

  #   - name: Login to Amazon ECR
  #     id: login-ecr
  #     uses: aws-actions/amazon-ecr-login@v1
        
    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      # env:
      #   ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #   IMAGE_TAG: ${{ github.sha }}
      run: |
        echo "테스트"
        pwd
        ls
        cd api
        ls
        cd build/libs
        ls
        # docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f api/Dockerfile api
        # docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        # echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
